name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps: 
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get update -y
        sudo apt install wget unzip -y
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610.zip -O sonar-scanner-cli.zip
        unzip sonar-scanner-cli.zip
        sudo mv  sonar-scanner-6.2.1.4610 sonar-scanner
        sudo chmod -R 777 sonar-scanner

    - name: Lint with pylint
      continue-on-error: true
      run: |
        pylint --rcfile=.pylintrc src tests > pylint-report.txt

    - name: Check format with black
      continue-on-error: true
      run: |
        black --check src tests --config pyproject.toml  

    - name: Run Security Scan (Bandit)
      run: bandit -r . -o bandit_report.txt || true

    - name: Run pytest with coverage
      continue-on-error: true
      run: |
        export PYTHONPATH=$PYTHONPATH:/home/runner/work/Ci-Pipeline-Python/Ci-Pipeline-Python/src
        pytest --cov=src --cov-report=xml --cov-report=html || true
        
    - name: Upload CI reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: CI reports
        path: |
          pylint-report.txt
          bandit_report.txt
          htmlcov/index.html

      
    - name: SonarQube Scan
      env:
        SONAR_URL: https://sonarcloud.io/
        SONAR_PROJECT_KEY: mansi-11-02_Ci-Pipeline-Python
        SONAR_SOURCES: src
        SONAR_TOKEN: ab7a9bceb63ff2fbc096218c25a798b91c265403
      run: |
        ./sonar-scanner/bin/sonar-scanner -X \
        -Dsonar.issuesReport.console.enable=true \
        -Dsonar.host.url=${{ env.SONAR_URL }} \
        -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
        -Dsonar.sources=${{ env.SONAR_SOURCES }} \
        -Dsonar.python.coverage.reportPaths=coverage.xml \
        -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
        -Dsonar.sourceEncoding=UTF-8 \
        -Dsonar.verbose=true \
        -Dsonar.organization=mansi-11-02



